{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtnEl = document.querySelector(\"button[data-start]\");\nconst daysEl = document.querySelector(\"span[data-days]\");\nconst hoursEl = document.querySelector(\"span[data-hours]\");\nconst minutesEl = document.querySelector(\"span[data-minutes]\");\nconst secondsEl = document.querySelector(\"span[data-seconds]\");\nconst imputEl = document.querySelector(\"#datetime-picker\");\n\nlet userDate = null;\n\nstartBtnEl.setAttribute(\"disabled\", true);\nstartBtnEl.addEventListener(\"click\", onStartBtnClick);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userDate = selectedDates[0];\n    if (userDate > Date.now()) {\n      startBtnEl.removeAttribute(\"disabled\");\n    } else {\n      iziToast.info({message: \"Please choose a date in the future\"});\n      startBtnEl.setAttribute(\"disabled\", true);\n    }\n  },\n};\n\nflatpickr(\"input#datetime-picker\", options);\n\nfunction onStartBtnClick() {\n  const timerId =  setInterval(() => {\n    const differenceTime = userDate - Date.now();\n    if (differenceTime < 0) {\n     clearInterval(timerId);\n     imputEl.removeAttribute(\"disabled\");\n     return\n    };\n    startBtnEl.setAttribute(\"disabled\", true);\n    imputEl.setAttribute(\"disabled\", true);\n    const currentTime = convertMs(userDate - Date.now());\n    console.log(currentTime);\n\n    daysEl.textContent = addLeadingZero(currentTime.days);\n    hoursEl.textContent = addLeadingZero(currentTime.hours);\n    minutesEl.textContent = addLeadingZero(currentTime.minutes);\n    secondsEl.textContent = addLeadingZero(currentTime.seconds);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n// Number of milliseconds per unit of time\nconst second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\n// Remaining days\nconst days = Math.floor(ms / day);\n// Remaining hours\nconst hours = Math.floor((ms % day) / hour);\n// Remaining minutes\nconst minutes = Math.floor(((ms % day) % hour) / minute);\n// Remaining seconds\nconst seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\nreturn { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, \"0\");\n}\n"],"names":["startBtnEl","daysEl","hoursEl","minutesEl","secondsEl","imputEl","userDate","onStartBtnClick","options","selectedDates","iziToast","flatpickr","timerId","currentTime","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAKA,MAAMA,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAS,SAAS,cAAc,iBAAiB,EACjDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAU,SAAS,cAAc,kBAAkB,EAEzD,IAAIC,EAAW,KAEfN,EAAW,aAAa,WAAY,EAAI,EACxCA,EAAW,iBAAiB,QAASO,CAAe,EAEpD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAWG,EAAc,GACrBH,EAAW,KAAK,MAClBN,EAAW,gBAAgB,UAAU,GAErCU,EAAS,KAAK,CAAC,QAAS,oCAAoC,CAAC,EAC7DV,EAAW,aAAa,WAAY,EAAI,EAE3C,CACH,EAEAW,EAAU,wBAAyBH,CAAO,EAE1C,SAASD,GAAkB,CACzB,MAAMK,EAAW,YAAY,IAAM,CAEjC,GADuBN,EAAW,KAAK,IAAG,EACrB,EAAG,CACvB,cAAcM,CAAO,EACrBP,EAAQ,gBAAgB,UAAU,EAClC,MAEL,CAAIL,EAAW,aAAa,WAAY,EAAI,EACxCK,EAAQ,aAAa,WAAY,EAAI,EACrC,MAAMQ,EAAcC,EAAUR,EAAW,KAAK,IAAK,CAAA,EACnD,QAAQ,IAAIO,CAAW,EAEvBZ,EAAO,YAAcc,EAAeF,EAAY,IAAI,EACpDX,EAAQ,YAAca,EAAeF,EAAY,KAAK,EACtDV,EAAU,YAAcY,EAAeF,EAAY,OAAO,EAC1DT,EAAU,YAAcW,EAAeF,EAAY,OAAO,CAC3D,EAAE,GAAI,CACT,CAEA,SAASC,EAAUE,EAAI,CAQvB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACtC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}