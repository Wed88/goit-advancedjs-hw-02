{"version":3,"file":"commonHelpers3.js","sources":["../src/js/03-promises.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst formEl = document.querySelector(\".form\");\n\nformEl.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget;\n\n  let delayPromise = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, delayPromise).then(onFulfilled).catch(onRejected);\n    delayPromise += Number(step.value);\n  }\n\n  event.currentTarget.reset();\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nfunction onFulfilled(result) {\n  iziToast.success({message: `${result}`});\n};\n\nfunction onRejected(error) {\n  iziToast.error({message: `${error}`});\n};\n"],"names":["formEl","event","delay","step","amount","delayPromise","i","createPromise","onFulfilled","onRejected","position","resolve","reject","shouldResolve","result","iziToast","error"],"mappings":"mIAGA,MAAMA,EAAS,SAAS,cAAc,OAAO,EAE7CA,EAAO,iBAAiB,SAAUC,GAAS,CACzCA,EAAM,eAAc,EAEpB,KAAM,CAAE,MAAAC,EAAO,KAAAC,EAAM,OAAAC,CAAM,EAAKH,EAAM,cAEtC,IAAII,EAAe,OAAOH,EAAM,KAAK,EAErC,QAASI,EAAI,EAAGA,GAAKF,EAAO,MAAOE,IACjCC,EAAcD,EAAGD,CAAY,EAAE,KAAKG,CAAW,EAAE,MAAMC,CAAU,EACjEJ,GAAgB,OAAOF,EAAK,KAAK,EAGnCF,EAAM,cAAc,OACtB,CAAC,EAED,SAASM,EAAcG,EAAUR,EAAO,CACtC,OAAO,IAAI,QAAQ,CAACS,EAASC,IAAW,CACtC,MAAMC,EAAgB,KAAK,OAAM,EAAK,GAEtC,WAAW,IAAM,CACXA,EACFF,EAAQ,uBAAuBD,QAAeR,KAAS,EAEvDU,EAAO,sBAAsBF,QAAeR,KAAS,CAExD,EAAEA,CAAK,CACZ,CAAG,CACH,CAEA,SAASM,EAAYM,EAAQ,CAC3BC,EAAS,QAAQ,CAAC,QAAS,GAAGD,GAAQ,CAAC,CACzC,CAEA,SAASL,EAAWO,EAAO,CACzBD,EAAS,MAAM,CAAC,QAAS,GAAGC,GAAO,CAAC,CACtC"}